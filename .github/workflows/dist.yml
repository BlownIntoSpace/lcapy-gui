name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions: write-all
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              pyinstaller --clean --windowed --specpath "./build" --upx-dir "./build"  --icon "../lcapygui/data/icon/lcapy-gui.png" --add-data "../lcapygui/data/:lcapygui/data/" --hidden-import='PIL._tkinter_finder' lcapygui.py
              cd
            OUT_FILE_NAME: lcapygui_x64.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller --clean --windowed --specpath "./build" --upx-dir "./build"  --icon "../lcapygui/data/icon/lcapy-gui.png" --add-data "../lcapygui/data/:lcapygui/data/" --hidden-import='PIL._tkinter_finder' lcapygui.py &&
              cd dist/ &&
              zip -r9 lcapygui lcapygui.app/
            OUT_FILE_NAME: lcapygui_macos.zip
            ASSET_MIME: application/zip

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Create Release
      uses: svenstaro/upload-release-action@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./dist/${{ matrix.OUT_FILE_NAME }}
        tag: ${{ github.ref }}